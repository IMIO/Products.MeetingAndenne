[buildout]
extends =
    base.cfg
    versions-dev.cfg

parts += checkversions
         checkdocs
         mrbob
         diazotools
         releaser
         test
         coverage
         report
         robot


[instance]
#use the instance eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on
environment-vars += ENABLE_PRINTING_MAILHOST True
                    IS_DEV_ENV True

eggs += Products.PrintingMailHost
        ipdb
        iw.debug
        plone.reload
        collective.profiler

zcml += iw.debug


[checkversions]
recipe = zc.recipe.egg

eggs = z3c.checkversions [buildout]


[checkdocs]
recipe = zc.recipe.egg

eggs = collective.checkdocs


[mrbob]
recipe = zc.recipe.egg

eggs = mr.bob
       bobtemplates.plone


[diazotools]
recipe = zc.recipe.egg

eggs = diazo


[releaser]
recipe = zc.recipe.egg

eggs = zest.releaser
       zest.pocompile


# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '-s', 'Products.MeetingAndenne']

eggs = ipdb
       plone.app.testing
       Products.PloneMeeting [test]
       Products.MeetingCommunes [test]
#       Products.MeetingAndenne [test]


environment = testenv


[testenv]
zope_i18n_compile_mo_files = true
IS_DEV_ENV = true


[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/Products/MeetingAndenne'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all', '-s', 'Products.MeetingAndenne']


[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']


[robot]
recipe = zc.recipe.egg
eggs = Pillow
       ${test:eggs}
       plone.app.robotframework[debug]